<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
default-lazy-init="true">

    <description>Spring公共配置</description>

    <context:annotation-config/>
<!--     <context:component-scan base-package="com.meiyi.module,com.meiyid.module,com.meiyice.module,com.meiyis.module"> -->
   <context:component-scan base-package="cn.multidatasource.dao,cn.multidatasource.stu,cn.multidatasource.service">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--main applicationContext file-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          lazy-init="false">
        <property name="locations">
            <list>
                <value>classpath*:conf/jdbc.properties</value>
                 <value>classpath*:conf/redis.properties</value>
            </list>
        </property>
    </bean>


    <!-- Spring AOP auto-proxy creation (required to support Shiro annotations) -->
    <!--bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/-->

    <!-- i18n Resource文件bundles -->
    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/messages</value>
                <value>i18n/errors</value>
            </list>
        </property>
    </bean>-->


    <!-- JSR303 Validator定义 -->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />-->

    <!-- 用于生成HTML邮件内容的Freemarker配置 -->
    <!--<bean id="mailFreemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="classpath:/template/email" />
    </bean>-->

    <import resource="applicationContext-db.xml"/>
    <!--<import resource="applicationContext-email.xml"/>-->
    <import resource="applicationContext-sqlmapping.xml"/>
    <!-- redis配置 -->
    <import resource="applicationContext-cache.xml"/>
    <!-- 定时任务 -->
   	<!--  <import resource="applicationContext-ratefile.xml"/>  -->


    <!--<bean id="waitSetleOrderJob"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="waitSellteOrderService"/>
        </property>
        <property name="targetMethod">
            <value>waitSettleOrder</value>
        </property>
    </bean>
    <bean id="waitSetleOrderJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="waitSetleOrderJob"/>
        </property>
        <property name="cronExpression">
            <value>0 0/1 * * * ?</value>
        </property>
    </bean>
    <bean id="sfb"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="waitSetleOrderJobTrigger" />
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">10</prop>
             </props>
        </property>
    </bean>-->
    
    <!--<bean id="processWaitSettleOrder" class="com.meiyi.service.module.trade.service.impl.ProcessWaitSettleOrderServiceImpl">
        <property name="orderGoodsService" ref="orderGoodsService"></property>
        <property name="shopLiquidationService" ref="shopLiquidationServiceImpl"></property>
        <property name="transactionTemplate" ref="transactionTemplate"></property>
        <property name="jedisPool" ref="jedisPool"></property>
        <property name="waitSettleOrderQueryService" ref="waitSettleOrderQueryService"></property>
    </bean>
    
    <bean id="processWaitCompensateWithdrawHandler" class="com.meiyi.service.module.payment.compensate.impl.ProcessWaitCompensateWithdrawHandler">
        <property name="jedisPool" ref="jedisPool"></property>
        <property name="processWaitCompstWithdrawService" ref="processWaitCompstWithdrawService"></property>
    </bean>-->
</beans>
